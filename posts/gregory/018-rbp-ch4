=title Ruby Tuesdays: RBP Chapter 4
=timestamp 2010-02-16 15:00 UTC
=description
After a short delay, the _Text Processing and File Management_ chapter of _Ruby Best Practices_ is now available for you to read and discuss.
=entry
If you're reading this blog, you probably know that the "Ruby Best Practices":http://rubybestpractices.com book exists.  Even if you haven't read it, you might have a sense for the sort of topics we cover based on the content you've seen on this blog. But now, everyone is going to get a chance to read RBP the way its meant to be read: as a conversation.  

We've already released the first three chapters, and discussion has been great.  If you haven't seen them already, check out the first week's <a href="http://blog.rubybestpractices.com/posts/gregory/015-rbp-ch1.html">discussion on testing</a>, and then head over and look at the <a href="http://blog.rubybestpractices.com/posts/gregory/rbp-ch2-3.html">double header on API design and metaprogramming</a>.  These discussions should give you a sense of the wide range of ideas our readers have been sharing as a result of this book study.

Readers are encouraged to <a href="http://jsomers.net/blog/kenjitsu">fight RBP as they read it</a>, rather than just soaking up the information.  Although I claim this book is about "Best Practices", the only reason that is true is that it's a result of countless conversations with folks who are deep in the Ruby trenches getting stuff done.  The only way for RBP to remain current and relevant is to continue these discussions, using its content as a jumping off point for fresh ideas.

So, if you're willing to participate in the discussion afterwards, go ahead and <a href="http://sandal.github.com/rbp-book/pdfs/ch04.pdf">download Chapter 4 now</a>.  Don't worry if it takes you more than a few days finish reading it, you can come back and comment any time.

While chapters 2 and 3 were about somewhat subtle features, this chapter is as concrete as they come.  Those with some Perl blood in them should find it familiar, as it's all about how to munge text and move stuff around on your filesystem.  But those who struggle with the scripting side of Ruby should find a number of techniques that will make their job easier.

Enjoy, and come back next Tuesday (2010.02.23) for Chapter 5, "Functional Programming Techniques".